{"version":3,"file":"static/js/700.8ccc6b27.chunk.js","mappings":"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","sources":["components/ScrollArea/index.jsx","pages/startPage/index.jsx","webpack:///./src/pages/startPageStyle.css?064c"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\"\r\nimport Vector from 'helpers/vector'\r\n\r\nimport useStorage from './state'\r\n// import { throttle } from \"lodash\"\r\n\r\n\r\nexport default function ScrollArea({style={}, zoomAutoOnLoad=false, zoomAutoOnSiftZ=false, children}){\r\n    const [{mul, shift, anchor, contentRef, bgRef, dragHandler},\r\n         {setDefaultSize, startDrag, moveToMouse, stopDrag, zoomAroundMouse, clearDragHandler},\r\n         {onHandleDrag, onHandleDragStop}] = useStorage()\r\n\r\n    // const moveToMouseThrottled = useCallback(throttle((...args) => moveToMouse(...args), 10), [])\r\n    // const zoomAroundMouseThrottled = useCallback(throttle((...args) => zoomAroundMouse(...args), 10), [])\r\n\r\n    useEffect(() => {\r\n        if(zoomAutoOnLoad)\r\n        setDefaultSize()\r\n\r\n        function keyBoardHandler(event){\r\n            if(event.shiftKey && !event.altKey && !event.ctrlKey && event.code=='KeyZ'){\r\n                event.stopPropagation()\r\n                setDefaultSize()\r\n            }\r\n        }\r\n        if(zoomAutoOnSiftZ)\r\n            document.addEventListener('keypress', keyBoardHandler)\r\n        return () => zoomAutoOnSiftZ && document.removeEventListener('keypress', keyBoardHandler)\r\n    }, [])\r\n    \r\n    function stopMouseHandle(event){\r\n        if(anchor)\r\n            stopDrag()\r\n        if(dragHandler){\r\n            onHandleDragStop()\r\n            clearDragHandler()\r\n        }\r\n    }\r\n\r\n\r\n    return <div style={{position : 'relative', width: '100%', 'height' : '100%', margin: 'auto', ...style}}>\r\n        <svg width=\"100%\" height=\"100%\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            onMouseDown={(event) => {\r\n                if(event.button == 0){\r\n                    event.stopPropagation()\r\n                    startDrag(event)\r\n                }\r\n            }}\r\n            onMouseUp={(event) => {\r\n                if(event.button == 0){\r\n                    event.stopPropagation()\r\n                    stopMouseHandle(event)\r\n                }\r\n            }}\r\n            onMouseLeave={(event) => stopMouseHandle(event)}\r\n            onMouseMove={(event) => {\r\n                if(anchor){\r\n                    // moveToMouseThrottled(event)\r\n                    moveToMouse(event)\r\n                }\r\n                if(dragHandler){\r\n                    onHandleDrag(event)\r\n                }\r\n            }}\r\n            \r\n            onWheel={(event) => {\r\n                event.stopPropagation()\r\n                // zoomAroundMouseThrottled(event)\r\n                zoomAroundMouse(event)\r\n            }}\r\n        >\r\n            <g ref={bgRef}>\r\n                <rect fill=\"transparent\" stroke=\"gray\" strokeWidth=\"1\" width=\"100%\" height=\"100%\"/>\r\n            </g>\r\n            <g ref={contentRef} transform={`scale(${mul}) translate(${shift.x} ${shift.y})`}>\r\n                {\r\n                    // anchor && <circle r=\"0.1\" fill=\"yellow\" cx={anchor.x} cy={anchor.y}/>\r\n                }\r\n                {children}\r\n            </g>\r\n        </svg>\r\n    </div>\r\n}","import '../startPageStyle.css'\nimport React, {useCallback, useEffect, useReducer, useState} from 'react'\nimport { Redirect } from \"react-router-dom\";\n\nimport ScrollArea from 'components/ScrollArea'\n\n\nimport use$sa from 'components/ScrollArea/state'\nimport use$ui from 'store/ui';\nimport use$data from 'store/data';\nimport { Button, Fab, Slider, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\n\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport CloseIcon from '@mui/icons-material/Close';\nconst configs = [\n    {key : 'agents', type: 'int', range: [0, 5000], description : 'количество агентов'},\n    {key : 'speedLimits', type: 'range', range: [0, 30], description : 'скоростной диапазон'},\n    {key : 'rotationBorder', type: 'int', range: [0, 180], description : 'максимальный разворот'},\n    {key : 'positionBufferSize', type: 'int', range: [0, 1000], description : 'длинна следа'},\n    {key : 'worldBorderSize', type: 'point', range: [0, 5000], description : 'размер мира'},\n]\n\nfunction Input({value, setter, type, range, description, key, labelStyle={}}){\n    if(type == 'int'){\n        return <Box>\n                <Typography style={labelStyle}>\n                    {description}\n                </Typography>\n                <Slider\n                    key={key} \n                    value={value} \n                    onChange={(e, value) => setter(value)}\n                    aria-label=\"Small\"\n                    valueLabelDisplay=\"auto\"\n                    min={range[0]}\n                    max={range[1]}\n                />\n            </Box>\n    }\n\n    if(type == 'range'){\n        return <Box>\n                <Typography style={labelStyle}>\n                    {description}\n                </Typography>\n                <Slider\n                    key={key} \n                    value={value} \n                    onChange={(e, value) => setter(value)}\n                    aria-label=\"Small\"\n                    valueLabelDisplay=\"auto\"\n                    min={range[0]}\n                    max={range[1]}\n                />\n            </Box>\n    }\n\n    if(type == 'point'){\n        return <Box>\n                <Typography style={labelStyle}>\n                    {description}\n                </Typography>\n                x:<Slider\n                    key={key} \n                    value={value.x} \n                    onChange={(_, pos) => {\n                        value.x = pos\n                        setter(value)\n                    }}\n                    aria-label=\"Small\"\n                    valueLabelDisplay=\"auto\"\n                    min={range[0]}\n                    max={range[1]}\n                />\n                y:<Slider\n                    key={key} \n                    value={value.y} \n                    onChange={(_, pos) => {\n                        value.y = pos\n                        setter(value)\n                    }}\n                    aria-label=\"Small\"\n                    valueLabelDisplay=\"auto\"\n                    min={range[0]}\n                    max={range[1]}\n                />\n            </Box>\n    }\n\n    return <Box>\n                <Typography style={labelStyle}>\n                    {description}\n                </Typography>\n                <Typography style={labelStyle}>\n                    не известный тип\n                </Typography>\n            </Box>\n}\n\nfunction ConfigInput({configDescription, state, setter, labelStyle={}}){\n    return <React.Fragment>\n        {configDescription.map(item => \n            <Input \n                key={item.key}\n                value={state[item.key]}\n                setter={value => setter({key: item.key, value})}\n                type={item.type}\n                range={item.range} \n                description={item.description}\n                labelStyle={labelStyle}\n            />\n        )}\n    </React.Fragment>\n}\n\nfunction ConfigSetter({position={\n    position: 'absolute',\n    top: 5,\n    left: 5,\n    zIndex: 1000,\n}}){\n    const [dataState, {SET, resetWoldBySettings}] = use$data();\n    const [opened, toggleOpened] = useReducer((opened) => !opened, false)\n    if(!opened)\n        return <Fab style={position} onClick={toggleOpened}>\n            <SettingsIcon/>\n        </Fab>\n\n    return <div \n        className=\"card\"\n        style={{\n            ...position,\n            opacity: 0.8,\n            background: 'gray',\n            padding: 5,\n            minWidth: 300,\n        }}\n    >\n        <Fab onClick={toggleOpened}>\n            <CloseIcon/>\n        </Fab>\n\n        <ConfigInput\n            configDescription={configs}\n            state={dataState}\n            setter={SET}\n            labelStyle={{\n                color: \"white\"\n            }}\n        />\n        <Button variant=\"contained\"  onClick={resetWoldBySettings} >Применить</Button>\n    \n    </div>\n}\n\nexport default function StartPage(){\n        const [,{setDefaultSize}] = use$sa();\n        const [{builders, worldBorder}, {tick, resetWoldBySettings}] = use$data();\n        const [updateKey, forceUpdate] = useReducer(() => new Date(), 0)\n\n        const [tickDuration, setTickDuration] = useState(100)\n\n        useEffect(() => resetWoldBySettings(), [])\n\n        useEffect(() =>{\n            const interval = setInterval(() => {\n                tick()\n                forceUpdate()\n                // setTimeout(setDefaultSize, tickDuration / 2)\n            }, tickDuration)\n\n            return () => clearInterval(interval)\n        }, [tickDuration])\n\n        return <div width=\"100vw\" height=\"100vh\" className='pageRoot' >\n                    <ConfigSetter/>\n                    <ScrollArea \n                    style={{\n                        width: 'calc(100vw - 5px)',\n                        height: 'calc(100vh - 5px)'\n                    }}\n                    zoomAutoOnSiftZ={true}\n                    zoomAutoOnLoad={true}\n                    >\n                        <rect \n                            stroke=\"white\" \n                            fill=\"transparent\"\n                            x={worldBorder[0].x} \n                            y={worldBorder[0].y} \n                            width={worldBorder[1].x - worldBorder[0].x} \n                            height={worldBorder[1].y - worldBorder[0].y} \n                            />\n                        <g>\n                            {builders.map((builder, index) => {\n                                return builder.visualizeBuffer({key: index})\n                                })\n                            }\n                        </g>\n                        \n                        <g>\n                            {builders.map((builder, index) => {\n                                return builder.visualizeAnt({key: index})\n                                })\n                            }\n                        </g>\n                    </ScrollArea>\n        </div>\n}","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["ScrollArea","style","zoomAutoOnLoad","zoomAutoOnSiftZ","children","useStorage","mul","shift","anchor","contentRef","bgRef","dragHandler","setDefaultSize","startDrag","moveToMouse","stopDrag","zoomAroundMouse","clearDragHandler","onHandleDrag","onHandleDragStop","stopMouseHandle","event","useEffect","keyBoardHandler","shiftKey","altKey","ctrlKey","code","stopPropagation","document","addEventListener","removeEventListener","position","width","margin","height","xmlns","onMouseDown","button","onMouseUp","onMouseLeave","onMouseMove","onWheel","ref","fill","stroke","strokeWidth","transform","x","y","configs","key","type","range","description","Input","value","setter","labelStyle","Box","Typography","Slider","onChange","e","valueLabelDisplay","min","max","_","pos","ConfigInput","configDescription","state","map","item","ConfigSetter","top","left","zIndex","use$data","dataState","SET","resetWoldBySettings","useReducer","opened","toggleOpened","className","opacity","background","padding","minWidth","Fab","onClick","Close","color","Button","variant","Settings","StartPage","use$sa","builders","worldBorder","tick","Date","forceUpdate","useState","tickDuration","interval","setInterval","clearInterval","builder","index","visualizeBuffer","visualizeAnt"],"sourceRoot":""}